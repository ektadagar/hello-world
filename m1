Int isPath(int **grid,int m,int n)
{
Return SolveMazeUtil(grid,0,0,m,n);
}I
nt SolveMazeUtil(int **grid,x,y,m,n)
{
If(x>=0 && x < m && y>=0 && y<n)
{
if(grid[x][y]==9))
{
return 1;
}
// Check if maze[x][y] is valid
if(grid[x][y] == 1)
{
/* Move forward in x direction */
if (solveMazeUtil(grid, x+1, y, m,n) == 1)
return 1;
/* If moving in x direction doesn't give solution then
Move down in y direction */
if (solveMazeUtil(grid, x, y+1, m,n) == 1)
return 1;
/* If none of the above movements work then BACKTRACK:
unmark x,y as part of solution path */
return 0;
}
return 0;
}
return 0;
}
